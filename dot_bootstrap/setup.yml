---
- name: Machine setup
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    flyctl_version: "0.1.130"
    pulumi_version: "v3.94.2"
    common_packages:
      - git
      - htop
      - vim
      - firefox
      - gh
      - ripgrep
      - zsh
      - fzf
      - tmux
      - ffmpeg
      - git-lfs
      - tree
      - ncdu
      - helix

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Debug package manager
      debug:
        msg: "Package manager is {{ ansible_pkg_mgr }}"

    - name: Install packages (Ubuntu/Debian)
      apt:
        name: "{{ common_packages + [
          'build-essential',
          'gcc',
          'g++',
          'make',
          'patch',
          'bzip2',
          'sqlite3',
          'libsqlite3-dev',
          'openssl',
          'libssl-dev',
          'libffi-dev',
          'libbz2-dev',
          'zlib1g-dev',
          'libreadline-dev',
          'libgdbm-dev',
          'libnss3-dev',
          'libncurses5-dev',
          'libncursesw5-dev',
          'xz-utils',
          'tk-dev',
          'liblzma-dev',
          'python3-dev',
          'python3-pip',
          'gnupg2',
          'imagemagick',
          'lua5.3',
          'lynx',
          'p7zip-full'
]
}
}"
        state: present
      become: true
      when: ansible_os_family == 'Debian'

    - name: Install packages (macOS)
      community.general.homebrew:
        name: "{{ common_packages + [
          'gnupg',
          'grep',
          'openssh',
          'screen',
          'php',
          'gmp',
          'ack',
          'imagemagick',
          'lua',
          'lynx',
          'p7zip'
]
}
}"
        state: present
      become: false
      when: ansible_os_family == 'Darwin'

    - name: Set zsh path
      set_fact:
        zsh_path: "{{ ansible_facts.shells | select('match', '/zsh$') | list | first | default('/bin/zsh') }}"

    - name: Change shell to zsh on Linux
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: "{{ zsh_path }}"
      become: true
      when: ansible_os_family != 'Darwin'

    - name: Change shell to zsh on macOS
      command: "chsh -s {{ zsh_path }} {{ remote_regular_user }}"
      become: true
      when: ansible_os_family == 'Darwin'